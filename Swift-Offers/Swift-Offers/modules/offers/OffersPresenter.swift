//
//  OffersPresenter.swift
//  Swift-Offers
//
//  Created by Chris Allinson on 2018-07-13.
//  Copyright (c) 2018 Chris Allinson. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit


protocol OffersPresentationLogic {
    func presentOffers(response: Offers.LoadOffers.Response)
    func presentSortedOffers(response: Offers.SortOffers.Response)
    func presentFilteredOffers(response: Offers.FilterOffers.Response)
}


// MARK: -

class OffersPresenter {
    
    // MARK: instance variables
    
    weak var viewController: OffersDisplayLogic?
}


// MARK: -

extension OffersPresenter: OffersPresentationLogic {
    
    // MARK: OffersPresentationLogic
    
    func presentOffers(response: Offers.LoadOffers.Response) {
        guard response.error == nil else {
            let viewModel = Offers.LoadOffers.ViewModel(
                offers: nil,
                error: response.error
            )
            viewController?.displayError(viewModel: viewModel)
            return
        }
        
        let viewModel = Offers.LoadOffers.ViewModel(
            offers: response.offers,
            error: nil
        )
        viewController?.displayOffers(viewModel: viewModel)
    }
    
    func presentSortedOffers(response: Offers.SortOffers.Response) {
        guard response.error == nil else {
            let viewModel = Offers.SortOffers.ViewModel(
                offers: nil,
                error: response.error
            )
            viewController?.displayError(viewModel: viewModel)
            return
        }
    
        let viewModel = Offers.SortOffers.ViewModel(
            offers: response.offers,
            error: nil
        )
        viewController?.displayOffers(viewModel: viewModel)
    }

    func presentFilteredOffers(response: Offers.FilterOffers.Response) {
        guard response.error == nil else {
            let viewModel = Offers.LoadOffers.ViewModel(
                offers: nil,
                error: response.error
            )
            viewController?.displayError(viewModel: viewModel)
            return
        }
        
        let viewModel = Offers.FilterOffers.ViewModel(
            offers: response.offers,
            error: nil
        )
        viewController?.displayOffers(viewModel: viewModel)
    }
}

